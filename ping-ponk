from pygame import *

background_img = 'jellyfishbg.jpg'
player1_image = 'spongebob.png'
ball_img = 'jellyfish.png'
player2_image = 'patrick.png'

mixer.init()
mixer.music.load('sponsbop.ogg')
mixer.music.play()
plak_sound = mixer.Sound('plak.ogg')
plak_sound.set_volume(0.3)

win_height = 500
win_width = 700 
window = display.set_mode((win_width, win_height))
display.set_caption('Jellyfishing!')
background = transform.scale(image.load(background_img), (win_width, win_height))

font.init()
font1 = font.Font(None, 35)
lose1 = font1.render('PLAYER 1 LOSE!', True, (255, 102, 178))
lose2 = font1.render('PLAYER 2 LOSE!', True, (255, 255, 51))

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))
    
class Player1(GameSprite):
    def update_l(self):
        keys = key_pressed = key.get_pressed()
        if key_pressed [K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if key_pressed [K_s] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

class Player2(GameSprite):
    def update_r(self):
        keys = key_pressed = key.get_pressed()
        if key_pressed [K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if key_pressed [K_DOWN] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

ball = GameSprite(ball_img, 100, 200, 50, 70, 5)
racket_l = Player1(player1_image, 20, 200, 80, 100, 1)
racket_r = Player2(player2_image, 600, 200, 80, 100, 1)

game = True
finish = False

speed_x = 1
speed_y = 1

while game:
    for e in event.get():
        if e.type == QUIT:
            game = False

    if not finish:
        window.blit(background, (0, 0))

        ball.rect.x += speed_x
        ball.rect.y += speed_y

        if ball.rect.y > win_height-50 or ball.rect.y < 0:
            speed_y *= -1

        if sprite.collide_rect(racket_l, ball) or sprite.collide_rect(racket_r, ball):
            plak_sound.play()
            speed_x *= -1

        if ball.rect.x < 0:
            finish = True
            window.blit(lose1, (240, 200))

        if ball.rect.x > 700:
            finish = True
            window.blit(lose2, (240, 200))

        ball.reset()
        racket_l.reset()
        racket_r.reset()

        racket_l.update_l()
        racket_r.update_r()

        display.update()
